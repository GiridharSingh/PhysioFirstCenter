@model Models.EmployeeModel

@{
    ViewBag.Title = "Edit";    
@{
    var imgSrc = "";
    if (Model.Image != null)
    {
        var base64 = Convert.ToBase64String(Model.Image);
        imgSrc = String.Format("data:image/gif;base64,{0}", base64);
    }
}

<style type="text/css">
    #dvPreview {
        filter: progid:DXImageTransform.Microsoft.AlphaImageLoader(sizingMethod=image);
        max-height: 200px;
        max-width: 200px;
        min-height: 200px;
        min-width: 200px;
        display: block;
        border: 1px;
    }

        #dvPreview img {
            max-height: 200px;
            max-width: 200px;
        }
</style>
<script>
$(function () {
    $("#fileupload").change(function () {
        $("#dvPreview").html("");
        var regex = /^([a-zA-Z0-9\s_\\.\-:])+(.jpg|.jpeg|.gif|.png|.bmp)$/;
        if (regex.test($(this).val().toLowerCase())) {
            $("#dvPreview").show();
            $("#dvPreview").append("<img />");
            var reader = new FileReader();
            reader.onload = function (e) {
                $("#dvPreview img").attr("src", e.target.result);
            }
            reader.readAsDataURL($(this)[0].files[0]);
        } else {
            alert("Please upload a valid image file.");
        }
    });
    $("#frmupdateEmp").validate({

        // Specify the validation rules
        rules: {
            First_Name: "required" ,
            Last_Name: "required",
            Email: {
                required: true,
                email: true
            },
            
            Gender: "required",
            Designation: "required",
            Description:"required",
            Joined_date: "required",
        },

        // Specify the validation error messages
        messages: {
            First_Name: "Please enter service name",
            Last_Name: "Please enter short description.",
            email: {
                required: "Please provide email.",
                email: "Please enter a valid email address."
            },
            Gender: "Please enter long description.",
            Designation:"Please enetr designation. ",
            Description: "Please enter description.",
            Joined_date: "please enter join date."

        },

        submitHandler: function (form) {
            form.submit();
        }
    });
    $('#Joined_date').datepicker({
        changeMonth:true,
    });
});
</script>

@using (Html.BeginForm("Edit", "Employees", FormMethod.Post, new { id = "frmupdateEmp", enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      


        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.First_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.First_Name,   new { @class = "form-control" })
                        @Html.HiddenFor(model => model.EmpId)
                         @Html.ValidationMessageFor(model => model.First_Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Last_Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Last_Name,   new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.Last_Name, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Email,  new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Gender, ViewBag.genderList as IEnumerable<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Designation, new { @class = "form-control" }  )
                        @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
                    </div>
                </div>



                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control"  })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Joined_date, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.Joined_date,  new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.Joined_date, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <input id="fileupload" type="file" name="file" />
                        <div id="dvPreview">
                            <img src="@imgSrc" />
                        </div>

                    </div>
                </div>
            </div>
        </div>
        
       

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "EmployeesIndex")
</div>

