@model Models.Photo

@{
    ViewBag.Title = "Upload Images";
    Layout = "~/Views/Shared/Admin_Layout.cshtml";
}
<style>
#dropZone {
        background: gray;
        border: black dashed 3px;
        width: 100px;
        padding: 50px;
        text-align: center;
        color: white;
    }
</style>
<div class="content indent">
    <div class="container">
        <h2>Upload Images</h2>
        <div class="jumbotron form-horizontal">
            <p>
                @Html.ActionLink("Back", "ShowGallery", "GalleryAdmin", new { area = "Admin" }, new { @class = "btn btn-default" })
            </p>
            @using (Html.BeginForm("Create", "GalleryAdmin", FormMethod.Post, new { id = "dropzoneJsForm", enctype = "multipart/form-data", @class = "dropzone" }))
            {
            
            }        
            <div id="decDiv" class="form-group" style="display:none">               
                <div class="col-sm-5">
                    @Html.TextBoxFor(m => Model.Decription, new { @placeholder = "Title OR Description", @id = "TxtDecription", @class = "form-control required" })
                </div>
                <div class="col-sm-offset-3">
                    <button id="submit-all" class="btn btn-default">Upload All</button>
                    <div style="color:red">
                        <label id="ResponseMsg"></label>
                    </div>
                </div>
            </div>           
        </div>       
    </div>
 </div>
    <script type="text/javascript">             
        Dropzone.options.dropzoneJsForm = {           
            paramName: "files",           
            uploadMultiple: true,
            parallelUploads: 100,
            maxFiles: 100,
            autoProcessQueue: false,
            addRemoveLinks: true,         
            init: function () {
                var submitButton = document.querySelector("#submit-all");
                var myDropzone = this; //closure
                this.on("sending", function (file, xhr, formData) {
                    formData.append("Decription", $("#TxtDecription").val());
                });
                submitButton.addEventListener("click", function () {                                  
                        //tell Dropzone to process all queued files
                        myDropzone.processQueue();                                    
                });                
                this.on("successmultiple", function (files, response) {                  
                    alert(response.Message);                   
                    // Gets triggered when the files have successfully been sent.
                    // Redirect user or notify of success.
                });
                this.on("errormultiple", function (files, response) {                   
                    alert(response.Message);                   
                    // Gets triggered when there was an error sending the files.
                    // Maybe show form again, and notify user of error
                });
                this.on("addedfile", function () {                  
                    // Show submit button here and/or inform user to click it.
                    $('#decDiv').show();                   
                });
                
            },
            removedfile: function(file) {
                var _ref;
                return (_ref = file.previewElement) != null ? _ref.parentNode.removeChild(file.previewElement) : void 0;
            }
        };

    </script>

